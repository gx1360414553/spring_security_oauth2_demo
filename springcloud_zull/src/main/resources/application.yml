server:
  port: 10001
  servlet:
    context-path: /api
spring:
  application:
    name: zull-service
  main:
    allow-bean-definition-overriding: true #\u5F53\u9047\u5230\u540C\u6837\u540D\u5B57\u7684\u65F6\u5019\uFF0C\u662F\u5426\u5141\u8BB8\u8986\u76D6\u6CE8\u518C
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    timeout: 5000 #\u8FDE\u63A5\u8D85\u65F6 \u6BEB\u79D2
    jedis:
      pool:
        maxActive: 3
        maxIdle: 3
        minIdle: 1
        maxWait: -1 #\u8FDE\u63A5\u6C60\u6700\u5927\u7B49\u884C\u65F6\u95F4 -1\u6CA1\u6709\u9650\u5236
zuul:
  routes:
    pay-manage:
      path: /pay/**
      serviceId: pay-service #\u5FAE\u670D\u52A1\u540D\u79F0\uFF0C\u7F51\u5173\u4F1A\u4ECEeureka\u4E2D\u83B7\u53D6\u8BE5\u670D\u52A1\u540D\u79F0\u4E0B\u7684\u670D\u52A1\u5B9E\u4F8B\u7684\u5730\u5740
      # \u4F8B\u5B50\uFF1A\u5C06\u8BF7\u6C42\u8F6C\u53D1\u5230http://localhost:31200/course
      #url: http://www.baidu.com #\u4E5F\u53EF\u6307\u5B9Aurl\uFF0C\u6B64url\u4E5F\u53EF\u4EE5\u662F\u5916\u7F51\u5730\u5740\
      strip-prefix: false #true\uFF1A\u4EE3\u7406\u8F6C\u53D1\u65F6\u53BB\u6389\u524D\u7F00\uFF0Cfalse:\u4EE3\u7406\u8F6C\u53D1\u65F6\u4E0D\u53BB\u6389\u524D\u7F00
      sensitiveHeaders:  #\u9ED8\u8BA4zuul\u4F1A\u5C4F\u853Dcookie\uFF0Ccookie\u4E0D\u4F1A\u4F20\u5230\u4E0B\u6E38\u670D\u52A1\uFF0C\u8FD9\u91CC\u8BBE\u7F6E\u4E3A\u7A7A\u5219\u53D6\u6D88\u9ED8\u8BA4\u7684\u9ED1\u540D\u5355\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E86\u5177\u4F53\u7684\u5934\u4FE1\u606F\u5219\u4E0D\u4F1A\u4F20\u5230\u4E0B\u6E38\u670D\u52A1
      #   ignoredHeaders: \u9ED8\u8BA4\u4E3A\u7A7A\u8868\u793A\u4E0D\u8FC7\u8651\u4EFB\u4F55\u5934
    auth-manage:
      path: /auth/user/**
      serviceId: center-auth-service #\u5FAE\u670D\u52A1\u540D\u79F0\uFF0C\u7F51\u5173\u4F1A\u4ECEeureka\u4E2D\u83B7\u53D6\u8BE5\u670D\u52A1\u540D\u79F0\u4E0B\u7684\u670D\u52A1\u5B9E\u4F8B\u7684\u5730\u5740
      # \u4F8B\u5B50\uFF1A\u5C06\u8BF7\u6C42\u8F6C\u53D1\u5230http://localhost:31200/course
      #url: http://www.baidu.com #\u4E5F\u53EF\u6307\u5B9Aurl\uFF0C\u6B64url\u4E5F\u53EF\u4EE5\u662F\u5916\u7F51\u5730\u5740\
      strip-prefix: false #true\uFF1A\u4EE3\u7406\u8F6C\u53D1\u65F6\u53BB\u6389\u524D\u7F00\uFF0Cfalse:\u4EE3\u7406\u8F6C\u53D1\u65F6\u4E0D\u53BB\u6389\u524D\u7F00
      sensitiveHeaders:  #\u9ED8\u8BA4zuul\u4F1A\u5C4F\u853Dcookie\uFF0Ccookie\u4E0D\u4F1A\u4F20\u5230\u4E0B\u6E38\u670D\u52A1\uFF0C\u8FD9\u91CC\u8BBE\u7F6E\u4E3A\u7A7A\u5219\u53D6\u6D88\u9ED8\u8BA4\u7684\u9ED1\u540D\u5355\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E86\u5177\u4F53\u7684\u5934\u4FE1\u606F\u5219\u4E0D\u4F1A\u4F20\u5230\u4E0B\u6E38\u670D\u52A1
eureka:
  client:
    registerWithEureka: true #\u670D\u52A1\u6CE8\u518C\u5F00\u5173
    fetchRegistry: true #\u670D\u52A1\u53D1\u73B0\u5F00\u5173
    serviceUrl: #Eureka\u5BA2\u6237\u7AEF\u4E0EEureka\u670D\u52A1\u7AEF\u8FDB\u884C\u4EA4\u4E92\u7684\u5730\u5740\uFF0C\u591A\u4E2A\u4E2D\u95F4\u7528\u9017\u53F7\u5206\u9694
      defaultZone: ${EUREKA_SERVER:http://localhost:10000/eureka/}
  instance:
    prefer-ip-address:  true  #\u5C06\u81EA\u5DF1\u7684ip\u5730\u5740\u6CE8\u518C\u5230Eureka\u670D\u52A1\u4E2D
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: ${spring.application.name}:${server.port} #\u6307\u5B9A\u5B9E\u4F8Bid
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间
